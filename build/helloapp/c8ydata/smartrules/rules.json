[{
  "name": "onAlarmSendSms",
  "label": {
    "input": "On alarm",
    "output": "send SMS"
  },
  "description": "When alarm is received then SMS is sent",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "params": [{
        "label": "Alarm type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }]
    },
    "output": {
      "label": "Send SMS:",
      "icon": "mobile",
      "params": [{
        "label": "Phone number",
        "property": "to",
        "required": true,
        "type": "text"
      }, {
        "label": "Message",
        "property": "text",
        "required": true,
        "type": "textarea",
        "default": "Alarm occurred",
        "warnMaxLength": 160
      }]
    }
  },
  "cepModule": {
    "file": "smsOnAlarm.epl"
  }
}, {
  "name": "onAlarmSendEmail",
  "label": {
    "input": "On alarm",
    "output": "send e-mail"
  },
  "description": "When alarm is received then e-mail is sent",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    },
    "outputUser": {
      "email": "config.to"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "params": [{
        "label": "Alarm type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }]
    },
    "output": {
      "label": "Send e-mail:",
      "icon": "envelope",
      "params": [{
        "label": "Send to",
        "property": "to",
        "required": true,
        "type": "email"
      }, {
        "label": "Send CC to",
        "property": "cc",
        "required": false,
        "type": "email"
      }, {
        "label": "Send BCC to",
        "property": "bcc",
        "required": false,
        "type": "email"
      }, {
        "label": "Reply to",
        "property": "replyTo",
        "required": false,
        "type": "email"
      }, {
        "label": "Subject",
        "property": "subject",
        "required": true,
        "type": "text",
        "default": "New #{severity} alarm from #{source.name}",
        "tokens": {
          "#{text}": "Alarm's text",
          "#{severity}": "Alarm's severity",
          "#{source.name}": "Alarm's source name"
        }
      }, {
        "label": "Message",
        "property": "text",
        "required": true,
        "type": "textarea",
        "default": "New #{severity} alarm has been received from #{source.name}. Alarm text is: \"#{text}\".",
        "tokens": {
          "#{text}": "Alarm's text",
          "#{severity}": "Alarm's severity",
          "#{source.name}": "Alarm's source name"
        }
      }]
    }
  },
  "cepModule": {
    "file": "emailOnAlarm.epl"
  }
},
{
  "name": "onAlarmEscalateAlarm",
  "label": {
    "input": "On alarm",
    "output": "escalate it"
  },
  "description": "Escalate alarm",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "colWidth": "5",
      "params": [{
        "label": "Alarm type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }]
    },
    "output": {
      "label": "Escalate as follows:",
      "icon": "list",
      "colWidth": "7",
      "params": [{
        "label": "Escalation steps",
        "property": "subrules",
        "type": "escalationSteps",
        "required": true,
        "stepTypes": [{
          "label": "e-mail",
          "icon": "envelope",
          "failable": false,
          "associatedRuleTemplateName": "onAlarmSendEmail"
        }, {
          "label": "SMS",
          "icon": "mobile",
          "failable": false,
          "associatedRuleTemplateName": "onAlarmSendSms"
        }, {
          "label": "Phone",
          "icon": "phone",
          "failable": true,
          "associatedRuleTemplateName": "onAlarmTextToSpeechCall"
        }]
      }]
    }
  },
  "cepModule": {
    "files": [
      "escalation/step_email_on_alarm.epl",
      "escalation/step_sms_on_alarm.epl",
      "escalation/step_t2s_on_alarm.epl",
      "escalation/steps_dispatcher.epl"
    ]
  }
},
{
  "name": "onAlarmDurationIncreaseAlarmSeverity",
  "label": {
    "input": "On alarm duration",
    "output": "increase severity"
  },
  "description": "Increase alarm severity when active for too long",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "params": [{
        "label": "Alarm type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }, {
        "label": "Alarm duration",
        "property": "duration",
        "required": true,
        "type": "timeInterval",
        "default": 3600,
        "dontUseSeconds": true
      }]
    },
    "output": {
      "label": "Increase alarm severity",
      "icon": "bell",
      "params": []
    }
  },
  "cepModule": {
    "file": "onAlarmDurationChangeAlarmSeverity.epl"
  }
}, {
  "name": "onGeofenceCreateAlarm",
  "label": {
    "input": "On geofence",
    "output": "create alarm"
  },
  "description": "On geofence create alarm",
  "category": "Geofence",
  "paramGroups": {
    "input": {
      "label": "On geofence violation:",
      "icon": "map-marker",
      "params": [{
        "label": "Geofence",
        "property": "geofence",
        "required": true,
        "type": "geofence"
      }]
    },
    "output": {
      "label": "Create alarm:",
      "icon": "bell",
      "params": [{
        "label": "Trigger on",
        "property": "triggerAlarmOn",
        "required": true,
        "type": "select",
        "options": [{
          "label": "On entering",
          "value": "entering"
        }, {
          "label": "On leaving",
          "value": "leaving"
        }, {
          "label": "On entering and leaving",
          "value": "both"
        }],
        "default": "leaving"
      }, {
        "label": "Type",
        "property": "alarmType",
        "required": true,
        "type": "alarmType",
        "default": "c8y_GeofenceAlarm"
      }, {
        "label": "Severity",
        "property": "alarmSeverity",
        "required": true,
        "type": "alarmSeverity",
        "default": "MAJOR"
      }, {
        "label": "Text",
        "property": "alarmText",
        "required": true,
        "type": "text",
        "default": "Geofence violation"
      }]
    }
  },
  "cepModule": {
    "file": "geofencingRule.epl"
  }
}, {
  "name": "onGeofenceSendEmail",
  "label": {
    "input": "On geofence",
    "output": "send e-mail"
  },
  "description": "On geofence send e-mail",
  "category": "Geofence",
  "contexts": {
    "outputUser": {
      "email": "config.to"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On geofence violation:",
      "icon": "map-marker",
      "params": [{
        "label": "Geofence",
        "property": "geofence",
        "required": true,
        "type": "geofence"
      }]
    },
    "output": {
      "label": "Send e-mail:",
      "icon": "envelope",
      "params": [{
        "label": "Send to",
        "property": "to",
        "required": true,
        "type": "email"
      }, {
        "label": "Send CC to",
        "property": "cc",
        "required": false,
        "type": "email"
      }, {
        "label": "Send BCC to",
        "property": "bcc",
        "required": false,
        "type": "email"
      }, {
        "label": "Reply to",
        "property": "replyTo",
        "required": false,
        "type": "email"
      }, {
        "label": "Subject",
        "property": "subject",
        "required": true,
        "type": "text",
        "default": "New geofence violation from #{source.name}",
        "tokens": {
          "#{source.name}": "Name of device that violated geofence"
        }
      }, {
        "label": "Message",
        "property": "text",
        "required": true,
        "type": "textarea",
        "default": "New geofence violation from #{source.name}",
        "tokens": {
          "#{source.name}": "Name of device that violated geofence"
        }
      }]
    }
  },
  "cepModule": {
    "file": "geofencingEmail.epl"
  }
}, {
  "name": "calculateEnergyConsumption",
  "label": {
    "input": "Calculate",
    "output": "energy consumption"
  },
  "description": "Calculates energy consumption",
  "category": "Energy",
  "contexts": {
    "inputDataPoint": {
      "fragment": "config.inputFragment",
      "series": "config.inputSeries"
    }
  },
  "paramGroups": {
    "input": {
      "label": "Monitored measurement:",
      "icon": "tachometer",
      "params": [{
        "label": "Fragment",
        "property": "inputFragment",
        "required": true,
        "type": "text",
        "default": "c8y_EnergyCounter"
      }, {
        "label": "Series",
        "property": "inputSeries",
        "required": true,
        "type": "text",
        "default": "E"
      }, {
        "label": "Time interval",
        "property": "timeInterval",
        "required": true,
        "type": "timeInterval",
        "default": 3600
      }]
    },
    "output": {
      "label": "Energy consumption measurement:",
      "icon": "bar-chart",
      "params": [{
        "label": "Fragment",
        "property": "outputFragment",
        "required": true,
        "type": "text",
        "default": "c8y_EnergyConsumption"
      }, {
        "label": "Series",
        "property": "outputSeries",
        "required": true,
        "type": "text",
        "default": "E"
      }]
    }
  },
  "cepModule": {
    "file": "consumption.epl"
  }
}, {
  "name": "onMissingMeasurementsCreateAlarm",
  "label": {
    "input": "On missing measurements",
    "output": "create alarm"
  },
  "description": "Creates alarm when measurements are missing",
  "category": "Measurements",
  "contexts": {
    "inputDataPoint": {
      "fragment": "config.measurementType"
    }
  },
  "paramGroups": {
    "input": {
      "label": "Monitored measurement:",
      "icon": "bar-chart",
      "params": [{
        "label": "Type",
        "property": "measurementType",
        "required": true,
        "type": "text"
      }, {
        "label": "Time interval",
        "property": "timePeriod",
        "required": true,
        "type": "timeInterval",
        "default": 3600,
        "dontUseSeconds": true
      }]
    },
    "output": {
      "label": "Create alarm:",
      "icon": "bell",
      "params": [{
        "label": "Type",
        "property": "alarmType",
        "required": true,
        "type": "alarmType",
        "default": "c8y_MissingMeasurementsAlarm"
      }, {
        "label": "Severity",
        "property": "alarmSeverity",
        "required": true,
        "type": "alarmSeverity",
        "default": "MAJOR"
      }, {
        "label": "Text",
        "property": "alarmText",
        "required": true,
        "type": "text",
        "default": "Missing measurements of type: #{type}",
        "tokens": {
          "#{type}": "Measurement's type"
        }
      }]
    }
  },
  "cepModule": {
    "file": "alarmOnMissingMeasurement.epl"
  }
}, {
  "name": "onAlarmExecuteOperation",
  "label": {
    "input": "On alarm",
    "output": "execute operation"
  },
  "description": "Executes an operation when alarm is received",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    },
    "outputOperation": {
      "template": "config.operation"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "params": [{
        "label": "Type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }]
    },
    "output": {
      "label": "Execute operation:",
      "icon": "gamepad",
      "params": [{
        "label": "Operation",
        "property": "operation",
        "required": true,
        "type": "operation",
        "default": {
          "description": "Restart device",
          "c8y_Restart": {}
        }
      }]
    }
  },
  "cepModule": {
    "file": "operationOnAlarm.epl"
  }
}, {
  "name": "explicitThresholdSmartRule",
  "label": {
    "input": "On measurement explicit threshold",
    "output": "create alarm"
  },
  "description": "Create alarm when measurement reaches explicit thresholds",
  "category": "Measurements",
  "contexts": {
    "inputDataPoint": {
      "fragment": "config.fragment",
      "series": "config.series",
      "redRangeMin": "config.redRangeMin",
      "redRangeMax": "config.redRangeMax"
    },
    "inputKpi": {
      "id": "config.kpiId"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On threshold:",
      "icon": "bar-chart",
      "params": [{
        "label": "Fragment",
        "property": "fragment",
        "required": true,
        "type": "text"
      }, {
        "label": "Series",
        "property": "series",
        "required": true,
        "type": "text"
      }, {
        "label": "Red range (min)",
        "property": "redRangeMin",
        "required": true,
        "type": "number",
        "default": 90
      }, {
        "label": "Red range (max)",
        "property": "redRangeMax",
        "required": true,
        "type": "number",
        "default": 100
      }, {
        "type": "hidden",
        "property": "explicitVariant",
        "default": true
      }]
    },
    "output": {
      "label": "Create alarm:",
      "icon": "bell",
      "params": [{
        "label": "Type",
        "property": "alarmType",
        "required": true,
        "type": "alarmType",
        "default": "c8y_ThresholdAlarm"
      }, {
        "label": "Text",
        "property": "alarmText",
        "required": true,
        "type": "text",
        "default": "Threshold exceeded",
        "tokens": {
          "#{type}": "Alarm's type",
          "#{time}": "Alarm's time",
          "#{sourceId}": "Alarm's source id"
        }
      }]
    }
  },
  "cepModule": {
    "file": "thresholdSmartRule.epl"
  }
}, {
  "name": "thresholdSmartRule",
  "label": {
    "input": "On measurement threshold",
    "output": "create alarm"
  },
  "description": "Creates alarms when measurement reaches thresholds",
  "category": "Measurements",
  "contexts": {
    "inputDataPoint": {
      "fragment": "config.fragment",
      "series": "config.series"
    },
    "inputKpi": {
      "id": "config.kpiId"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On threshold:",
      "icon": "bar-chart",
      "params": [{
        "label": "Fragment",
        "property": "fragment",
        "required": true,
        "type": "text"
      }, {
        "label": "Series",
        "property": "series",
        "required": true,
        "type": "text"
      }, {
        "label": "Data point",
        "property": "kpiId",
        "required": false,
        "type": "kpi"
      }]
    },
    "output": {
      "label": "Create alarm:",
      "icon": "bell",
      "params": [{
        "label": "Type",
        "property": "alarmType",
        "required": true,
        "type": "alarmType",
        "default": "c8y_ThresholdAlarm"
      }, {
        "label": "Text",
        "property": "alarmText",
        "required": true,
        "type": "text",
        "default": "Thresholds exceeded",
        "tokens": {
          "#{type}": "Alarm's type",
          "#{time}": "Alarm's time",
          "#{sourceId}": "Alarm's source id"
        }
      }]
    }
  },
  "cepModule": {
    "file": "thresholdSmartRule.epl"
  }
}, {
  "name": "onAlarmTextToSpeechCall",
  "label": {
    "input": "On alarm",
    "output": "initiate text-to-speech call"
  },
  "description": "When alarm is received, text-to-speech call is initiated",
  "category": "Alarms",
  "contexts": {
    "inputAlarm": {
      "type": "config.alarmType"
    }
  },
  "paramGroups": {
    "input": {
      "label": "On alarm matching:",
      "icon": "bell",
      "params": [{
        "label": "Alarm type",
        "property": "alarmType",
        "required": true,
        "type": "alarmTypeMultiple"
      }]
    },
    "output": {
      "label": "Text-to-speech:",
      "icon": "mobile",
      "params": [{
        "label": "Phone number",
        "property": "to",
        "required": true,
        "type": "text"
      }, {
        "label": "Message",
        "property": "text",
        "required": true,
        "type": "textarea",
        "default": "Alarm occurred"
      }, {
        "label": "Retries",
        "property": "retries",
        "required": true,
        "type": "number",
        "default": 0,
        "maxNumber": 20
      }, {
        "label": "Interval",
        "property": "timeout",
        "required": true,
        "type": "number",
        "default": 5
      }, {
        "label": "Acknowledgement",
        "property": "acknowledgement",
        "required": false,
        "type": "checkbox",
        "default": false
      }, {
        "label": "Acknowledgement text",
        "property": "acknowledgeText",
        "requireIf": "rule.config.acknowledgement===true",
        "type": "text",
        "default": "Please acknowledge this call by pressing the button 5",
        "showIf": "rule.config.acknowledgement===true",
        "setIf": "rule.config.acknowledgement===true"
      }, {
        "label": "Acknowledgement number",
        "property": "acknowledgeNumber",
        "requireIf": "rule.config.acknowledgement===true",
        "type": "number",
        "default": 5,
        "minNumber": 0,
        "maxNumber": 9,
        "showIf": "rule.config.acknowledgement===true",
        "setIf": "rule.config.acknowledgement===true"
      }]
    }
  },
  "cepModule": {
    "file": "t2sOnAlarm.epl"
  }
}, {
  "name": "sendDashboardsViaEmail",
  "label": {
    "input": "On timer",
    "output": "send dashboard via e-mail"
  },
  "description": "Send dashboard via email",
  "category": "Dashboard",
  "noTarget": true,
  "contexts": {},
  "hideFromList": true,
  "paramGroups": {
    "input": {
      "label": "Dashboard & frequency",
      "icon": "asterisk",
      "params": [{
        "label": "Dashboard",
        "property": "url",
        "required": true,
        "type": "dashboard"
      },{
        "label": "Frequency",
        "property": "frequency",
        "required": true,
        "type": "frequency"
      }]
    },
    "output": {
      "label": "Send e-mail:",
      "icon": "envelope",
      "params": [{
        "label": "Send to",
        "property": "to",
        "required": true,
        "type": "email"
      }, {
        "label": "Send CC to",
        "property": "cc",
        "required": false,
        "type": "email"
      }, {
        "label": "Send BCC to",
        "property": "bcc",
        "required": false,
        "type": "email"
      }, {
        "label": "Reply to",
        "property": "replyTo",
        "required": false,
        "type": "email"
      }, {
        "label": "Subject",
        "property": "subject",
        "required": true,
        "type": "text",
        "default": "Print screen of dashboard"
      }, {
        "label": "Message",
        "property": "text",
        "required": true,
        "type": "textarea",
        "default": ""
      }]
    }
  },
  "cepModule": {
    "file": "sendDashboardInEmail.epl"
  }
}]
