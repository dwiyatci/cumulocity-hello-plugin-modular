/* the id of MO with rule's configuration: ${ruleId}*/

create schema InputData_0_${ruleId} (
	alarm Alarm,
	rule ManagedObject
);

create schema InputData_1_${ruleId} (
	alarm Alarm,
	operationTemplate java.util.Map
);

create schema InputData_${ruleId} (
	alarm Alarm,
	operation com.cumulocity.model.operation.Operation
);

@Name("GetRuleConfiguration")
insert into InputData_0_${ruleId}
select
	alarmCreated.alarm as alarm,
	findManagedObjectById("${ruleId}") as rule
from
	AlarmCreated alarmCreated;

@Name("ValidateAlarm")
insert into InputData_1_${ruleId}
select
	alarm as alarm,
	cast(getObject(rule, "config.operation"), java.util.Map) as operationTemplate
from
	InputData_0_${ruleId}
where
    getString(rule, "config.alarmType").split(",").anyOf(v => alarm.type = v.trim())
	and (alarm.source.value in (getList(rule, "enabledSources"))
		or (getList(rule, "enabledSources") is null and alarm.source.value not in (getList(rule, "disabledSources"))));

@Name("CreateOperation")
insert into CreateOperation
select
	cast(createOperationFromTemplate(operationTemplate, alarm), com.cumulocity.model.operation.Operation) as operation,
	alarm.source as deviceId,
	"PENDING" as status
from
	InputData_1_${ruleId};
