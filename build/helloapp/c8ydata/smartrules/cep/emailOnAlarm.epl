/* the id of MO with rule's configuration: ${ruleId}*/

create schema InputData_0_${ruleId} (
	alarm Alarm,
	rule ManagedObject
);

@Name("GetRuleConfiguration")
insert into InputData_0_${ruleId}
select
	alarmCreated.alarm as alarm,
	findManagedObjectById("${ruleId}") as rule
from
	AlarmCreated alarmCreated;

create schema InputData_1_${ruleId} (
	alarm Alarm,
	rule ManagedObject
);

@Name("ValidateAlarm")
insert into InputData_1_${ruleId}
select
	alarm as alarm,
	rule as rule
from
	InputData_0_${ruleId}
where
	not inMaintenanceMode(alarm.source)
	and getString(rule, "config.alarmType").split(",").anyOf(v => alarm.type = v.trim())
	and (alarm.source.value in (getList(rule, "enabledSources"))
		or (getList(rule, "enabledSources") is null and alarm.source.value not in (getList(rule, "disabledSources"))));

create schema InputData_${ruleId} (
	alarm Alarm,
	source ManagedObject,
	replyTo String,
    to String,
    cc String,
    bcc String,
	subject String,
	text String
);

@Name("AssembleDataFromConfiguration")
insert into InputData_${ruleId}
select
	alarm as alarm,
	findManagedObjectById(alarm.source.value) as source,
	getString(rule, "config.replyTo") as replyTo,
	getString(rule, "config.to") as to,
	getString(rule, "config.cc") as cc,
	getString(rule, "config.bcc") as bcc,
	getString(rule, "config.subject") as subject,
	getString(rule, "config.text") as text
from
	InputData_1_${ruleId};

@Name("SendEmail")
insert into SendEmail
select
	replaceAllPlaceholders(inputData.subject, alarm) as subject,
	replaceAllPlaceholders(inputData.text, alarm) as text,
	inputData.replyTo as replyTo,
	inputData.to as receiver,
	inputData.cc as cc,
	inputData.bcc as bcc
from
	InputData_${ruleId} inputData;
