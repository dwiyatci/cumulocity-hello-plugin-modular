/**
 * Expected rule format:
 *
 {
    "to",
    "text",
    "subject
 }
 */

@Description("rule input")
@Name("email_on_alarm_input")
@Resilient
create schema Email_On_Alarm_Input_${ruleId} (
	alarm Alarm,
	step integer,
	rule Map
);

@Description("rule output")
@Name("email_on_alarm_output")
@Resilient
create schema Email_On_Alarm_Output_${ruleId} (
	alarm Alarm,
	step integer,
	success boolean
);

@Resilient
create schema Email_InputData_1_${ruleId} (
	alarm Alarm,
	step integer,
	rule Map
);

@Name("email_on_alarm_start")
@Resilient
insert into Email_InputData_1_${ruleId}
select
	alarm as alarm,
	rule as rule,
	step as step
from
	Email_On_Alarm_Input_${ruleId};

@Resilient
create schema Email_InputData_${ruleId} (
	alarm Alarm,
	source ManagedObject,
	replyTo String,
    to String,
    cc String,
    bcc String,
	subject String,
	text String,
	step integer
);

@Resilient
insert into Email_InputData_${ruleId}
select
	alarm as alarm,
	findManagedObjectById(alarm.source.value) as source,
	getString(rule, "replyTo") as replyTo,
	getString(rule, "to") as to,
	getString(rule, "cc") as cc,
	getString(rule, "bcc") as bcc,
	getString(rule, "subject") as subject,
	getString(rule, "text") as text,
	step as step
from
	Email_InputData_1_${ruleId};

@Name("SendEmail")
@Resilient
insert into SendEmail
select
	replaceAllPlaceholders(inputData.subject, alarm) as subject,
	replaceAllPlaceholders(inputData.text, alarm) as text,
	inputData.replyTo as replyTo,
	inputData.to as receiver,
	inputData.cc as cc,
	inputData.bcc as bcc
from
	Email_InputData_${ruleId} inputData;

@Name("prepare_email_on_alarm_output")
@Resilient
insert into Email_On_Alarm_Output_${ruleId}
select
	alarm as alarm,
	true as success,
	step as step
from
	Email_InputData_${ruleId} inputData;
